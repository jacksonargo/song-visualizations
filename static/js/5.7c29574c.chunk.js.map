{"version":3,"sources":["TopArtistsPerDecadeBarsVis.tsx"],"names":["BarChart","props","visRef","useRef","useEffect","svg","iWidth","width","margin","left","right","iHeight","height","top","bottom","data","rollupData","xAttr","yAttr","x","d3","domain","Array","from","keys","map","n","toString","padding","y","line","d","bandwidth","distinctArtists","ref","current","append","attr","g","selectAll","join","datum","text","style","call","drawBarChart","remove","TopArtistsPerDecadeBarsVis","show","rollup","dataset","toUniqueArtistsRollup","DataFilter","filter","r","sort","a","b","decade"],"mappings":"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","file":"static/js/5.7c29574c.chunk.js","sourcesContent":["import { Box } from \"@mui/material\";\nimport * as d3 from \"d3\";\nimport React, { RefObject, useEffect, useRef } from \"react\";\nimport { DataFilter } from \"./DataFilter\";\nimport { Dataset, UniqueArtistsRollup } from \"./Dataset\";\nimport { GenreToggleMap } from \"./GenreToggles\";\n\nfunction TopArtistsPerDecadeBarsVis(props: {\n  dataset: Dataset;\n  show: boolean;\n  genreToggles: GenreToggleMap;\n  yearStart?: number;\n  yearEnd?: number;\n  height: number;\n  width: number;\n  margin: { left: number; right: number; top: number; bottom: number };\n}) {\n  if (!props.show) return <Box />;\n\n  const rollup = props.dataset\n    .toUniqueArtistsRollup({ ...props, ...new DataFilter(props) })\n    .filter((r) => r.distinctArtists > 1);\n\n  rollup.sort((a, b) => a.decade - b.decade);\n\n  return (\n    <Box>\n      <BarChart\n        rollupData={rollup}\n        height={props.height}\n        width={props.width}\n        margin={props.margin}\n      />\n    </Box>\n  );\n}\n\nfunction BarChart(props: {\n  rollupData: UniqueArtistsRollup[];\n  height: number;\n  width: number;\n  margin: { left: number; right: number; top: number; bottom: number };\n}) {\n  const visRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const svg = drawBarChart({ ref: visRef, ...props });\n    return () => {\n      svg.remove();\n    };\n  });\n  return <div ref={visRef} />;\n}\n\nfunction drawBarChart(props: {\n  rollupData: UniqueArtistsRollup[];\n  ref: RefObject<HTMLDivElement>;\n  height: number;\n  width: number;\n  margin: { left: number; right: number; top: number; bottom: number };\n}) {\n  const iWidth = props.width - props.margin.left - props.margin.right;\n  const iHeight = props.height - props.margin.top - props.margin.bottom;\n\n  const data = props.rollupData;\n\n  const xAttr = \"decade\";\n  const yAttr = \"distinctArtists\";\n\n  const x = d3\n    .scaleBand([0, iWidth])\n    .domain(\n      Array.from(new Array(8).keys())\n        .map((n) => 1950 + n * 10)\n        .map((x) => x.toString())\n    )\n    .padding(0.05);\n\n  const y = d3.scaleLinear([iHeight, 0]).domain([0, 210]);\n\n  const line = d3\n    .line<UniqueArtistsRollup>()\n    .x((d) => (x(d[xAttr].toString()) ?? 0) + x.bandwidth() / 2)\n    .y((d) => y(d.distinctArtists));\n\n  const div = d3.select(props.ref.current);\n  const svg = div\n    .append(\"svg\")\n    .attr(\"viewBox\", `0 0 ${props.width} ${props.height}`);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"transform\", `translate(${props.margin.left}, ${props.margin.top})`);\n\n  g.selectAll(\"rect\")\n    .data(data)\n    .join(\"rect\")\n    .attr(\"x\", (d) => x(d[xAttr].toString()) ?? 0)\n    .attr(\"width\", () => x.bandwidth())\n    .attr(\"y\", (d) => y(d[yAttr]))\n    .attr(\"height\", (d) => iHeight - y(d[yAttr]))\n    .attr(\"fill\", \"#adc2eb\");\n\n  g.selectAll(\".point\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"cx\", (d) => (x(d[xAttr].toString()) ?? 0) + x.bandwidth() / 2)\n    .attr(\"cy\", (d) => y(d[yAttr]))\n    .attr(\"r\", 2)\n    .attr(\"fill\", \"black\");\n\n  g.append(\"path\")\n    .datum(data)\n    .attr(\"d\", (d) => line(d))\n    .attr(\"fill\", \"none\")\n    .attr(\"class\", \"line\")\n    .attr(\"stroke\", \"steelblue\")\n    .attr(\"stroke-width\", 1.5);\n\n  g.selectAll(\".countText\")\n    .data(data)\n    .join(\"text\")\n    .text((d) => d.distinctArtists)\n    .attr(\"class\", \"countText\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"x\", (d) => (x(d[xAttr].toString()) ?? 0) + x.bandwidth() / 2)\n    .attr(\"y\", (d) => y(d[yAttr]) - 15);\n\n  g.append(\"g\")\n    .attr(\"transform\", `translate(0, ${iHeight})`)\n    .style(\"font-size\", \"small\")\n    .call(d3.axisBottom(x));\n\n  return svg;\n}\n\nexport default TopArtistsPerDecadeBarsVis;\n"],"sourceRoot":""}