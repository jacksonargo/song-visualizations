{"version":3,"sources":["data/Filter.ts","spec/artists/SingleDecadeBarsSpec.ts","spec/artists/SingleDecadeDonutSpec.ts","components/ArtistsByDecadeChart.tsx","components/ArtistsSummaryChart.tsx","spec/artists/SummaryBarChartSpec.ts","spec/features/AreaChartSpec.ts","components/FeaturesAreaChart.tsx","spec/features/RadarChartSpec.ts","components/FeaturesRadarChart.tsx","components/GenreToggles.tsx","data/spotify_decades.csv","data/CsvRow.ts","data/Dataset.ts","components/SelectGenre.tsx","App.tsx","index.js"],"names":["Filter","props","genreToggles","yearStart","yearEnd","this","SingleDecadeBarsSpec","$schema","mark","type","tooltip","data","values","width","height","encoding","x","field","axis","title","y","color","SingleDecadeDonutSpec","radius","innerRadius","textRadius","layer","padAngle","theta","stack","text","ArtistsByDecadeChart","show","Box","rollup","dataset","toArtistsVisRow","filter","r","artist","decadeGrouping","d3","decade","initSummary","name","distinctArtists","genres","count","summarize","a","b","uniq","artistsSummary","topArtists","Array","from","entries","forEach","sorted","sort","reverse","decadeTopArtists","slice","topN","summaryTop","reduce","summaryOthers","push","decades","map","Grid","container","item","xs","md","VegaLite","spec","ArtistsSummaryChart","BarChart","rollupData","margin","visRef","useRef","useEffect","svg","iWidth","left","right","iHeight","top","bottom","yAttr","domain","keys","n","toString","padding","line","d","bandwidth","ref","current","append","attr","g","selectAll","join","datum","style","call","SummaryBarChartSpec","remove","AreaChartSpec","format","scale","aggregate","FeaturesAreaChart","toFeaturesVisRow","RadarChartSpec","description","autosize","contains","signals","update","source","transform","groupby","scales","range","signal","zero","nice","domainMin","scheme","encode","enter","marks","zindex","facet","interpolate","value","stroke","strokeWidth","fill","fillOpacity","align","baseline","x2","y2","test","fontWeight","FeaturesRadarChart","key","feature_name","category","val","GenreToggleMap","get","selected","Map","GenreToggles","toggle","Switch","onChange","e","newToggles","set","target","checked","setGenreToggles","FormGroup","options","FormControlLabel","control","label","CsvRow","rawRow","i","album_name","album_image_url","album_release_date","duration_ms","explicit","popularity","preview_url","danceability","energy","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","time_signature","artist_followers","artist_genres","artist_popularity","track_id","Number","year","replaceAll","split","genre_name","trim","length","audioFeatures","Dataset","rows","genreCounts","flatMap","counter","genre","aName","bName","aCount","bCount","localeCompare","selectedGenres","isEmpty","intersection","grouping","artistGrouping","sum","blob","SelectGenre","useState","search","setSearch","filtered","toLowerCase","includes","TextField","variant","loadingMessage","App","dataBytes","sessionStorage","getItem","setDataBytes","fetch","dataSrc","then","resp","setItem","useCsvData","showVariationAreaVis","setShowVariationAreaVis","showVariationsRadarVis","setShowVariationsRadarVis","showTopArtistsOverallBar","setShowTopArtistsOverallBar","showTopArtistsByDecadeBar","setShowTopArtistsByDecadeBars","fromBlob","fallback","Container","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f139dacc.chunk.js","sourcesContent":["import { GenreToggleMap } from \"../components/GenreToggles\";\n\nexport interface FilterProps {\n  genreToggles: GenreToggleMap;\n  yearStart?: number;\n  yearEnd?: number;\n}\n\nexport class Filter {\n  genreToggles: GenreToggleMap;\n  yearStart: number;\n  yearEnd: number;\n  constructor(props: FilterProps) {\n    this.yearStart = props.yearStart ?? 1950;\n    this.yearStart = this.yearStart > 1950 ? this.yearStart : 1950;\n    this.yearEnd = props.yearStart ?? 2025;\n    this.yearEnd = this.yearEnd < 2025 ? this.yearEnd : 2025;\n    this.genreToggles = props.genreToggles;\n  }\n}\n","import { VisualizationSpec } from \"react-vega\";\nimport { ArtistsVisRow } from \"../../data/Dataset\";\n\nexport function SingleDecadeBarsSpec(props: {\n  data: ArtistsVisRow[];\n  height: number;\n  width: number;\n}): VisualizationSpec {\n  return {\n    $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n    mark: { type: \"bar\", tooltip: true },\n    data: { values: props.data },\n    width: props.width,\n    height: props.height,\n    encoding: {\n      x: {\n        field: \"count\",\n        type: \"quantitative\",\n        axis: { title: \"Number of Top Hits\" },\n      },\n      y: { field: \"artist\", type: \"nominal\" },\n      color: {\n        field: \"artist\",\n        type: \"nominal\",\n      },\n    },\n  };\n}\n","import { VisualizationSpec } from \"react-vega\";\nimport { ArtistsVisRow } from \"../../data/Dataset\";\n\nexport function SingleDecadeDonutSpec(props: {\n  data: ArtistsVisRow[];\n  height: number;\n  width: number;\n  innerRadius?: number;\n  radius?: number;\n  padAngle?: number;\n}): VisualizationSpec {\n  const radius = props.radius ?? 120;\n  const innerRadius = props.innerRadius ?? 60;\n  const textRadius = (radius - innerRadius) / 2 + innerRadius;\n  const padAngle = props.innerRadius ?? 0.01;\n\n  return {\n    $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n    layer: [\n      {\n        mark: { type: \"arc\", tooltip: true, radius, innerRadius, padAngle },\n        encoding: {\n          theta: { type: \"quantitative\", field: \"count\", stack: true },\n          color: {\n            field: \"artist\",\n            type: \"nominal\",\n          },\n        },\n      },\n      {\n        mark: { type: \"text\", radius: textRadius },\n        encoding: {\n          theta: { type: \"quantitative\", field: \"count\", stack: true },\n          text: { type: \"nominal\", field: \"artist\" },\n        },\n      },\n    ],\n    data: { values: props.data },\n    width: props.width,\n    height: props.height,\n  };\n}\n","import { Box, Grid } from \"@mui/material\";\nimport * as d3 from \"d3\";\nimport { uniq } from \"lodash/fp\";\nimport { VegaLite } from \"react-vega\";\nimport { Filter, FilterProps } from \"../data/Filter\";\nimport { ArtistsVisRow, Dataset } from \"../data/Dataset\";\nimport { SingleDecadeBarsSpec } from \"../spec/artists/SingleDecadeBarsSpec\";\nimport { SingleDecadeDonutSpec } from \"../spec/artists/SingleDecadeDonutSpec\";\n\nexport interface TopArtistsByDecadeVisProps extends FilterProps {\n  dataset: Dataset;\n  innerRadius?: number;\n  padAngle?: number;\n  height: number;\n  width: number;\n  topN: number;\n  show: boolean;\n}\n\nexport function ArtistsByDecadeChart(props: TopArtistsByDecadeVisProps) {\n  if (!props.show) return <Box />;\n\n  const rollup = props.dataset\n    .toArtistsVisRow(new Filter(props))\n    .filter((r) => r.artist !== \"\");\n  const decadeGrouping = d3.group(rollup, (r) => r.decade);\n\n  const initSummary = (decade: number, name: string): ArtistsVisRow => ({\n    decade: decade,\n    distinctArtists: 0,\n    artist: name,\n    genres: [] as string[],\n    count: 0,\n  });\n\n  const summarize = (a: ArtistsVisRow, b: ArtistsVisRow) => ({\n    ...a,\n    count: a.count + b.count,\n    distinctArtists: a.distinctArtists + b.distinctArtists,\n    genres: uniq([...a.genres, ...b.genres]),\n  });\n\n  const artistsSummary: ArtistsVisRow[] = [];\n  const topArtists: ArtistsVisRow[] = [];\n  Array.from(decadeGrouping.entries()).forEach(([decade, grouping]) => {\n    const sorted = grouping.sort((a, b) => a.count - b.count).reverse();\n\n    const decadeTopArtists = sorted.slice(0, props.topN);\n    const summaryTop = decadeTopArtists.reduce(\n      summarize,\n      initSummary(decade, `Top ${props.topN}\\nArtists`)\n    );\n\n    const decodeOther = sorted.slice(props.topN, -1);\n    const summaryOthers = decodeOther.reduce(\n      summarize,\n      initSummary(decade, \"Others\")\n    );\n\n    artistsSummary.push(summaryOthers);\n    artistsSummary.push(summaryTop);\n    topArtists.push(...decadeTopArtists);\n  });\n\n  const decades = uniq(topArtists.map((r) => r.decade)).sort();\n  return (\n    <Box>\n      {decades.map((decade) => (\n        <Grid key={decade} container>\n          <Grid item xs={12}>\n            <h3>{decade}</h3>\n          </Grid>\n          <Grid item md={6}>\n            <h4>\n              How many tops hits were produced by the top {props.topN} artists?\n            </h4>\n            <VegaLite\n              width={350}\n              spec={SingleDecadeDonutSpec({\n                ...props,\n                data: artistsSummary.filter((r) => r.decade === decade),\n              })}\n            />\n          </Grid>\n          <Grid item md={6}>\n            <VegaLite\n              width={350}\n              spec={SingleDecadeBarsSpec({\n                ...props,\n                data: topArtists.filter((r) => r.decade === decade),\n              })}\n            />\n          </Grid>\n        </Grid>\n      ))}\n    </Box>\n  );\n}\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useRef } from \"react\";\nimport { GenreToggleMap } from \"./GenreToggles\";\nimport { Filter } from \"../data/Filter\";\nimport { ArtistsVisRow, Dataset } from \"../data/Dataset\";\nimport { SummaryBarChartSpec } from \"../spec/artists/SummaryBarChartSpec\";\n\nexport function ArtistsSummaryChart(props: {\n  dataset: Dataset;\n  show: boolean;\n  genreToggles: GenreToggleMap;\n  yearStart?: number;\n  yearEnd?: number;\n  height: number;\n  width: number;\n  margin: { left: number; right: number; top: number; bottom: number };\n}) {\n  if (!props.show) return <Box />;\n\n  const rollup = props.dataset\n    .toArtistsVisRow({ ...props, ...new Filter(props) })\n    .filter((r) => r.distinctArtists > 1);\n\n  rollup.sort((a, b) => a.decade - b.decade);\n\n  return (\n    <Box>\n      <BarChart\n        rollupData={rollup}\n        height={props.height}\n        width={props.width}\n        margin={props.margin}\n      />\n    </Box>\n  );\n}\n\nfunction BarChart(props: {\n  rollupData: ArtistsVisRow[];\n  height: number;\n  width: number;\n  margin: { left: number; right: number; top: number; bottom: number };\n}) {\n  const visRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const svg = SummaryBarChartSpec({ ref: visRef, ...props });\n    return () => {\n      svg.remove();\n    };\n  });\n  return <div ref={visRef} />;\n}\n","import * as d3 from \"d3\";\nimport { RefObject } from \"react\";\nimport { ArtistsVisRow } from \"../../data/Dataset\";\n\nexport function SummaryBarChartSpec(props: {\n  rollupData: ArtistsVisRow[];\n  ref: RefObject<HTMLDivElement>;\n  height: number;\n  width: number;\n  margin: { left: number; right: number; top: number; bottom: number };\n}) {\n  const iWidth = props.width - props.margin.left - props.margin.right;\n  const iHeight = props.height - props.margin.top - props.margin.bottom;\n\n  const data = props.rollupData;\n\n  const xAttr = \"decade\";\n  const yAttr = \"distinctArtists\";\n\n  const x = d3\n    .scaleBand([0, iWidth])\n    .domain(\n      Array.from(new Array(8).keys())\n        .map((n) => 1950 + n * 10)\n        .map((x) => x.toString())\n    )\n    .padding(0.05);\n\n  const y = d3.scaleLinear([iHeight, 0]).domain([0, 210]);\n\n  const line = d3\n    .line<ArtistsVisRow>()\n    .x((d) => (x(d[xAttr].toString()) ?? 0) + x.bandwidth() / 2)\n    .y((d) => y(d.distinctArtists));\n\n  const div = d3.select(props.ref.current);\n  const svg = div\n    .append(\"svg\")\n    .attr(\"viewBox\", `0 0 ${props.width} ${props.height}`);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"transform\", `translate(${props.margin.left}, ${props.margin.top})`);\n\n  g.selectAll(\"rect\")\n    .data(data)\n    .join(\"rect\")\n    .attr(\"x\", (d) => x(d[xAttr].toString()) ?? 0)\n    .attr(\"width\", () => x.bandwidth())\n    .attr(\"y\", (d) => y(d[yAttr]))\n    .attr(\"height\", (d) => iHeight - y(d[yAttr]))\n    .attr(\"fill\", \"#adc2eb\");\n\n  g.selectAll(\".point\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"cx\", (d) => (x(d[xAttr].toString()) ?? 0) + x.bandwidth() / 2)\n    .attr(\"cy\", (d) => y(d[yAttr]))\n    .attr(\"r\", 2)\n    .attr(\"fill\", \"black\");\n\n  g.append(\"path\")\n    .datum(data)\n    .attr(\"d\", (d) => line(d))\n    .attr(\"fill\", \"none\")\n    .attr(\"class\", \"line\")\n    .attr(\"stroke\", \"steelblue\")\n    .attr(\"stroke-width\", 1.5);\n\n  g.selectAll(\".countText\")\n    .data(data)\n    .join(\"text\")\n    .text((d) => d.distinctArtists)\n    .attr(\"class\", \"countText\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"x\", (d) => (x(d[xAttr].toString()) ?? 0) + x.bandwidth() / 2)\n    .attr(\"y\", (d) => y(d[yAttr]) - 15);\n\n  g.append(\"g\")\n    .attr(\"transform\", `translate(0, ${iHeight})`)\n    .style(\"font-size\", \"small\")\n    .call(d3.axisBottom(x));\n\n  return svg;\n}\n","import { uniq } from \"lodash/fp\";\nimport { VisualizationSpec } from \"react-vega\";\nimport { FeaturesRow } from \"../../data/Dataset\";\n\nexport function AreaChartSpec(props: {\n  data: FeaturesRow[];\n  height: number;\n  width: number;\n  yearStart: number;\n  yearEnd: number;\n}): VisualizationSpec {\n  const decades = uniq(props.data.map((r) => r.decade)).sort();\n\n  return {\n    $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n    mark: { type: \"area\" },\n    width: props.width,\n    height: props.height,\n    data: { values: props.data },\n    encoding: {\n      x: {\n        field: \"year\",\n        type: \"quantitative\",\n        title: \"Year\",\n        axis: { format: \"d\", values: uniq(decades) },\n        scale: { domain: [props.yearStart, props.yearEnd] },\n      },\n      y: {\n        aggregate: \"sum\",\n        field: \"value\",\n        title: \"Feature Dominance\",\n        stack: \"normalize\",\n      },\n      color: { field: \"feature_name\", type: \"nominal\", title: \"Audio Feature\" },\n    },\n  };\n}\n","import { Box } from \"@mui/material\";\nimport { VegaLite } from \"react-vega\";\nimport { Filter, FilterProps } from \"../data/Filter\";\nimport { Dataset } from \"../data/Dataset\";\nimport { AreaChartSpec } from \"../spec/features/AreaChartSpec\";\n\nexport interface FeaturesAreaChartProps extends FilterProps {\n  height: number;\n  width: number;\n  dataset: Dataset;\n  show: boolean;\n}\n\nexport function FeaturesAreaChart(props: FeaturesAreaChartProps) {\n  if (!props.show) return <Box />;\n  const filter = new Filter(props);\n  return (\n    <Box>\n      <VegaLite\n        spec={AreaChartSpec({\n          ...props,\n          ...filter,\n          data: props.dataset.toFeaturesVisRow(filter),\n        })}\n      />\n    </Box>\n  );\n}\n","import { VisualizationSpec } from \"react-vega\";\n\nexport interface RadarChartData {\n  key: string;\n  value: number;\n  category: number;\n}\n\nexport function RadarChartSpec(props: {\n  data: RadarChartData[];\n  height: number;\n  width: number;\n  padding: number;\n}): VisualizationSpec {\n  return {\n    $schema: \"https://vega.github.io/schema/vega/v5.json\",\n    description:\n      \"A radar chart example, showing multiple dimensions in a radial layout.\",\n    width: props.width,\n    height: props.height,\n    padding: props.padding,\n    autosize: { type: \"none\", contains: \"padding\" },\n    signals: [{ name: \"radius\", update: \"width / 2\" }],\n    data: [\n      {\n        name: \"table\",\n        values: props.data,\n      },\n      {\n        name: \"keys\",\n        source: \"table\",\n        transform: [\n          {\n            type: \"aggregate\",\n            groupby: [\"key\"],\n          },\n        ],\n      },\n    ],\n\n    scales: [\n      {\n        name: \"angular\",\n        type: \"point\",\n        //@ts-ignore\n        range: { signal: \"[-PI,PI]\" },\n        padding: 0.5,\n        domain: { data: \"table\", field: \"key\" },\n      },\n      {\n        name: \"radial\",\n        type: \"linear\",\n        range: { signal: \"[0, radius]\" },\n        zero: true,\n        nice: false,\n        domain: { data: \"table\", field: \"value\" },\n        domainMin: 0,\n      },\n      {\n        name: \"color\",\n        type: \"ordinal\",\n        domain: { data: \"table\", field: \"category\" },\n        range: { scheme: \"category10\" },\n      },\n    ],\n\n    encode: {\n      enter: {\n        x: { signal: \"radius\" },\n        y: { signal: \"radius\" },\n      },\n    },\n\n    marks: [\n      {\n        type: \"group\",\n        name: \"categories\",\n        zindex: 1,\n        from: {\n          facet: { data: \"table\", name: \"facet\", groupby: [\"category\"] },\n        },\n        marks: [\n          {\n            type: \"line\",\n            name: \"category-line\",\n            from: { data: \"facet\" },\n            encode: {\n              enter: {\n                interpolate: { value: \"linear-closed\" },\n                x: {\n                  signal:\n                    \"scale('radial', datum.value) * cos(scale('angular', datum.key))\",\n                },\n                y: {\n                  signal:\n                    \"scale('radial', datum.value) * sin(scale('angular', datum.key))\",\n                },\n                stroke: { scale: \"color\", field: \"category\" },\n                strokeWidth: { value: 1 },\n                fill: { scale: \"color\", field: \"category\" },\n                fillOpacity: { value: 0.1 },\n              },\n            },\n          },\n          {\n            type: \"text\",\n            name: \"value-text\",\n            from: { data: \"category-line\" },\n            encode: {\n              enter: {\n                x: { signal: \"datum.x\" },\n                y: { signal: \"datum.y\" },\n                text: { signal: \"datum.datum.value\" },\n                align: { value: \"center\" },\n                baseline: { value: \"middle\" },\n                fill: { value: \"black\" },\n              },\n            },\n          },\n        ],\n      },\n      {\n        type: \"rule\",\n        name: \"radial-grid\",\n        from: { data: \"keys\" },\n        zindex: 0,\n        encode: {\n          enter: {\n            x: { value: 0 },\n            y: { value: 0 },\n            x2: { signal: \"radius * cos(scale('angular', datum.key))\" },\n            y2: { signal: \"radius * sin(scale('angular', datum.key))\" },\n            stroke: { value: \"lightgray\" },\n            strokeWidth: { value: 1 },\n          },\n        },\n      },\n      {\n        type: \"text\",\n        name: \"key-label\",\n        from: { data: \"keys\" },\n        zindex: 1,\n        encode: {\n          enter: {\n            x: { signal: \"(radius + 5) * cos(scale('angular', datum.key))\" },\n            y: { signal: \"(radius + 5) * sin(scale('angular', datum.key))\" },\n            text: { field: \"key\" },\n            align: [\n              {\n                test: \"abs(scale('angular', datum.key)) > PI / 2\",\n                value: \"right\",\n              },\n              {\n                value: \"left\",\n              },\n            ],\n            baseline: [\n              {\n                test: \"scale('angular', datum.key) > 0\",\n                value: \"top\",\n              },\n              {\n                test: \"scale('angular', datum.key) == 0\",\n                value: \"middle\",\n              },\n              {\n                value: \"bottom\",\n              },\n            ],\n            fill: { value: \"black\" },\n            fontWeight: { value: \"bold\" },\n          },\n        },\n      },\n      {\n        type: \"line\",\n        name: \"outer-line\",\n        from: { data: \"radial-grid\" },\n        encode: {\n          enter: {\n            interpolate: { value: \"linear-closed\" },\n            x: { field: \"x2\" },\n            y: { field: \"y2\" },\n            stroke: { value: \"lightgray\" },\n            strokeWidth: { value: 1 },\n          },\n        },\n      },\n    ],\n  };\n}\n","import { Box, Grid } from \"@mui/material\";\nimport * as d3 from \"d3\";\nimport { uniq } from \"lodash/fp\";\nimport { VegaLite } from \"react-vega\";\nimport { Filter, FilterProps } from \"../data/Filter\";\nimport { Dataset } from \"../data/Dataset\";\nimport {\n  RadarChartData,\n  RadarChartSpec,\n} from \"../spec/features/RadarChartSpec\";\n\nexport interface RadarChartVisProps extends FilterProps {\n  height: number;\n  width: number;\n  dataset: Dataset;\n  padding: number;\n  show: boolean;\n}\n\nexport function FeaturesRadarChart(props: RadarChartVisProps) {\n  if (!props.show) return <Box />;\n\n  const filter = new Filter(props);\n  const data = props.dataset\n    .toFeaturesVisRow(filter)\n    .map<RadarChartData>((r) => ({\n      key: r.feature_name,\n      category: r.decade,\n      value: r.value,\n    }));\n\n  const rollup: RadarChartData[] = d3\n    .flatGroup(\n      data,\n      (r) => r.category,\n      (r) => r.key\n    )\n    .map(([category, key, grouping]) => ({\n      category,\n      key,\n      value: grouping.reduce((val, x) => val + x.value, 0),\n    }));\n\n  const decades = uniq(rollup.map((r) => r.category)).sort();\n  return (\n    <Box>\n      <Grid container>\n        {decades.map((decade) => (\n          <Grid key={decade} item md={6}>\n            <h3>{decade}</h3>\n            <VegaLite\n              spec={RadarChartSpec({\n                ...props,\n                data: rollup.filter((r) => decade === r.category),\n              })}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n","import { FormControlLabel, FormGroup, Switch } from \"@mui/material\";\nimport React from \"react\";\n\nexport class GenreToggleMap extends Map<string, boolean> {\n  selected(name: string): boolean {\n    return this.get(name) ?? false;\n  }\n\n  selectedGenres(): string[] {\n    return Array.from(this.keys()).filter((name) => this.selected(name));\n  }\n}\n\nexport function GenreToggles(props: {\n  genreToggles: GenreToggleMap;\n  setGenreToggles: (val: GenreToggleMap) => void;\n  options: string[];\n}) {\n  function toggle(name: string) {\n    return (\n      <Switch\n        value={props.genreToggles.get(name)}\n        onChange={(e) => {\n          const newToggles = new GenreToggleMap(props.genreToggles);\n          newToggles.set(name, e.target.checked);\n          props.setGenreToggles(newToggles);\n        }}\n      />\n    );\n  }\n\n  return (\n    <FormGroup>\n      {props.options.map((name) => (\n        <FormControlLabel key={name} control={toggle(name)} label={name} />\n      ))}\n    </FormGroup>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/spotify_decades.d5ba62b9.csv\";","import * as d3 from \"d3\";\nimport { useEffect, useState } from \"react\";\nimport dataSrc from \"./spotify_decades.csv\";\n\nexport interface CsvRowSchema {\n  name?: string;\n  artist?: string;\n  album_name?: string;\n  album_image_url?: string;\n  album_release_date?: string;\n  duration_ms?: string;\n  explicit?: string;\n  popularity?: string;\n  preview_url?: string;\n  danceability?: string;\n  energy?: string;\n  key?: string;\n  loudness?: string;\n  mode?: string;\n  speechiness?: string;\n  acousticness?: string;\n  instrumentalness?: string;\n  liveness?: string;\n  valence?: string;\n  tempo?: string;\n  time_signature?: string;\n  artist_followers?: string;\n  artist_genres?: string;\n  artist_popularity?: string;\n  track_id?: string;\n  [s: string]: string | undefined;\n}\n\nexport class CsvRow {\n  name: string = \"\";\n  artist: string = \"\";\n  album_name: string = \"\";\n  album_image_url: string = \"\";\n  album_release_date: string = \"\";\n  duration_ms: string = \"\";\n  explicit: string = \"\";\n  popularity: string = \"\";\n  preview_url: string = \"\";\n  danceability: string = \"\";\n  energy: string = \"\";\n  key: string = \"\";\n  loudness: string = \"\";\n  mode: string = \"\";\n  speechiness: string = \"\";\n  acousticness: string = \"\";\n  instrumentalness: string = \"\";\n  liveness: string = \"\";\n  valence: string = \"\";\n  tempo: string = \"\";\n  time_signature: string = \"\";\n  artist_followers: string = \"\";\n  artist_genres: string = \"\";\n  artist_popularity: string = \"\";\n  track_id: string = \"\";\n  [s: string]: string | (() => number) | (() => string[]);\n\n  constructor(rawRow: d3.DSVRowString) {\n    for (const i in rawRow) this[i] = rawRow[i] ?? \"\";\n  }\n\n  year(): number {\n    return Number(this.album_release_date.slice(0, 4));\n  }\n\n  decade(): number {\n    return this.year() - (this.year() % 10);\n  }\n\n  genres(): string[] {\n    return this.artist_genres // This field appears to contain a json array of strings,\n      .replaceAll(/[[\\]'\"]/gi, \"\") // but it isn't valid json. Thankfully, it's easy to parse ourselves.\n      .split(\",\")\n      .map((genre_name) => genre_name.trim())\n      .filter((genre_name) => genre_name.length > 0);\n  }\n}\n\nexport function useCsvData() {\n  const [dataBytes, setDataBytes] = useState(\n    sessionStorage.getItem(\"dataBytes\")\n  );\n  useEffect(() => {\n    if ((dataBytes?.length ?? 0) > 0) return;\n    fetch(dataSrc)\n      .then((resp) => resp.text())\n      .then((data) => {\n        if (data) {\n          setDataBytes(data);\n          sessionStorage.setItem(\"dataBytes\", data);\n        }\n      });\n  });\n  return dataBytes;\n}\n","import * as d3 from \"d3\";\nimport { intersection, isEmpty, uniq } from \"lodash/fp\";\nimport { CsvRow } from \"./CsvRow\";\nimport { GenreToggleMap } from \"../components/GenreToggles\";\n\nconst audioFeatures = [\n  \"danceability\",\n  \"energy\",\n  \"speechiness\",\n  \"acousticness\",\n  \"instrumentalness\",\n  \"liveness\",\n  \"valence\",\n];\n\nexport interface ArtistsVisRow {\n  decade: number;\n  artist: string;\n  count: number;\n  distinctArtists: number;\n  genres: string[];\n}\n\nexport interface FeaturesRow {\n  year: number;\n  decade: number;\n  feature_name: string;\n  value: number;\n  genres: string[];\n}\n\nexport interface FilterProps {\n  genreToggles: GenreToggleMap;\n  yearStart?: number;\n  yearEnd?: number;\n}\n\nexport class Dataset {\n  readonly rows: CsvRow[];\n  readonly genres: string[];\n  readonly genreCounts: Map<string, number>;\n\n  constructor(data: CsvRow[]) {\n    this.rows = data;\n\n    const genres = data.flatMap((r) => r.genres());\n    this.genreCounts = genres.reduce(\n      (counter, genre) => counter.set(genre, 1 + (counter.get(genre) ?? 0)),\n      new Map<string, number>()\n    );\n\n    this.genres = uniq(genres).sort((aName, bName) => {\n      const aCount = this.genreCounts.get(aName) ?? 0;\n      const bCount = this.genreCounts.get(bName) ?? 0;\n      if (aCount === bCount) return aName.localeCompare(bName);\n      return aCount - bCount;\n    });\n  }\n\n  static fromBlob(blob: string): Dataset {\n    return new Dataset(d3.csvParse(blob).map((rawRow) => new CsvRow(rawRow)));\n  }\n\n  toArtistsVisRow(props: {\n    yearStart: number;\n    yearEnd: number;\n    genreToggles: GenreToggleMap;\n  }): ArtistsVisRow[] {\n    const selected = props.genreToggles.selectedGenres();\n    const data = this.rows\n      .filter((r) => r.year() >= props.yearStart)\n      .filter((r) => r.year() <= props.yearEnd)\n      .filter(\n        (r) =>\n          isEmpty(selected) || intersection(selected, r.genres()).length > 0\n      )\n      .filter((r) => r.decade() > 0)\n      .map((r) => ({\n        artist: r.artist,\n        year: r.year(),\n        decade: r.decade(),\n        genres: r.genres(),\n      }));\n\n    const grouping = d3.group(\n      data,\n      (r) => r.decade,\n      (r) => r.artist\n    );\n\n    return Array.from(grouping).flatMap(([decade, decadeGrouping]) => {\n      const rollup = Array.from(decadeGrouping).map(\n        ([artist, artistGrouping]) => ({\n          decade: decade,\n          artist: artist,\n          count: artistGrouping.length,\n          distinctArtists: 1,\n          genres: artistGrouping.flatMap((r) => r.genres),\n        })\n      );\n\n      rollup.push({\n        decade: decade,\n        artist: \"\",\n        count: rollup.reduce((sum, g) => sum + g.count, 0),\n        distinctArtists: rollup.length,\n        genres: rollup.flatMap((r) => r.genres),\n      });\n\n      return rollup;\n    });\n  }\n\n  toFeaturesVisRow(props: {\n    yearStart: number;\n    yearEnd: number;\n    genreToggles: GenreToggleMap;\n  }): FeaturesRow[] {\n    const selected = props.genreToggles.selectedGenres();\n    return this.rows\n      .filter((r) => r.year() >= props.yearStart)\n      .filter((r) => r.year() <= props.yearEnd)\n      .filter(\n        (r) =>\n          isEmpty(selected) || intersection(selected, r.genres()).length > 0\n      )\n      .flatMap((r) => {\n        return audioFeatures.map<FeaturesRow>((feature_name) => ({\n          year: r.year(),\n          decade: r.decade(),\n          feature_name: feature_name,\n          value: r[feature_name] ? Number(r[feature_name]) : 0,\n          genres: r.genres(),\n        }));\n      });\n  }\n}\n","import { Grid, TextField } from \"@mui/material\";\nimport { uniq } from \"lodash/fp\";\nimport { useState } from \"react\";\nimport { GenreToggleMap, GenreToggles } from \"./GenreToggles\";\n\nexport function SelectGenre(props: {\n  genreToggles: GenreToggleMap;\n  setGenreToggles: (val: GenreToggleMap) => void;\n  options: string[];\n  selected: string[];\n}) {\n  const [search, setSearch] = useState(\"\");\n\n  const filtered = props.options\n    .filter((name) => name && name.toLowerCase().includes(search))\n    .slice(0, 10);\n  const options = uniq([...filtered, ...props.selected]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <TextField\n          label=\"search genres\"\n          variant=\"standard\"\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <h4>Top matches</h4>\n        <GenreToggles\n          genreToggles={props.genreToggles}\n          setGenreToggles={props.setGenreToggles}\n          options={options}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import { Container, Grid, Switch } from \"@mui/material\";\nimport React, { Suspense, useState } from \"react\";\nimport { ArtistsByDecadeChart } from \"./components/ArtistsByDecadeChart\";\nimport { ArtistsSummaryChart } from \"./components/ArtistsSummaryChart\";\nimport { FeaturesAreaChart } from \"./components/FeaturesAreaChart\";\nimport { FeaturesRadarChart } from \"./components/FeaturesRadarChart\";\nimport { GenreToggleMap } from \"./components/GenreToggles\";\nimport { useCsvData } from \"./data/CsvRow\";\nimport { Dataset } from \"./data/Dataset\";\nimport { SelectGenre } from \"./components/SelectGenre\";\n\nconst loadingMessage = <p>Loading...</p>;\n\nfunction App() {\n  const dataBytes = useCsvData();\n  const [genreToggles, setGenreToggles] = useState(new GenreToggleMap());\n\n  const [showVariationAreaVis, setShowVariationAreaVis] = useState(true);\n  const [showVariationsRadarVis, setShowVariationsRadarVis] = useState(false);\n  const [showTopArtistsOverallBar, setShowTopArtistsOverallBar] =\n    useState(false);\n  const [showTopArtistsByDecadeBar, setShowTopArtistsByDecadeBars] =\n    useState(false);\n\n  if (!dataBytes) return loadingMessage;\n  const dataset = Dataset.fromBlob(dataBytes);\n  const options = dataset.genres.reverse();\n  const selectedGenres = Array.from(genreToggles.keys()).filter((name) =>\n    genreToggles.get(name)\n  );\n\n  return (\n    <Suspense fallback={loadingMessage}>\n      <Container>\n        <Grid container>\n          <Grid item xs={12} style={{ textAlign: \"center\" }}>\n            <h1>Visualizing Audio Features over the Decades</h1>\n            <em>Created by Jackson Argo, Matt Kinley, and Erick Martinez.</em>\n          </Grid>\n          <Grid item xs={2}>\n            <SelectGenre\n              genreToggles={genreToggles}\n              setGenreToggles={setGenreToggles}\n              options={options}\n              selected={selectedGenres}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <h2>Variation in Features</h2>\n            <Switch\n              checked={showVariationAreaVis}\n              onChange={(e) => {\n                setShowVariationAreaVis(e.target.checked);\n              }}\n            />\n            <FeaturesAreaChart\n              show={showVariationAreaVis}\n              dataset={dataset}\n              genreToggles={genreToggles}\n              height={300}\n              width={800}\n            />\n            <h2>Variation in Features Radar</h2>\n            <Switch\n              checked={showVariationsRadarVis}\n              onChange={(e) => {\n                setShowVariationsRadarVis(e.target.checked);\n              }}\n            />\n            <FeaturesRadarChart\n              show={showVariationsRadarVis}\n              dataset={dataset}\n              genreToggles={genreToggles}\n              height={400}\n              width={400}\n              padding={40}\n            />\n            <h2>Count of Top Artists</h2>\n            <Switch\n              checked={showTopArtistsOverallBar}\n              onChange={(e) => {\n                setShowTopArtistsOverallBar(e.target.checked);\n              }}\n            />\n            <ArtistsSummaryChart\n              show={showTopArtistsOverallBar}\n              dataset={dataset}\n              genreToggles={genreToggles}\n              height={300}\n              width={800}\n              margin={{ left: 50, top: 50, right: 20, bottom: 20 }}\n            />\n            <h2>Top Artists by Decade</h2>\n            <Switch\n              checked={showTopArtistsByDecadeBar}\n              onChange={(e) => {\n                setShowTopArtistsByDecadeBars(e.target.checked);\n              }}\n            />\n            <ArtistsByDecadeChart\n              show={showTopArtistsByDecadeBar}\n              dataset={dataset}\n              genreToggles={genreToggles}\n              topN={10}\n              height={300}\n              width={800}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}